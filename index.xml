<?xml-stylesheet href="/rss.xsl" type="text/xsl"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Book Of Daniel</title>
    <link>https://bookofdaniel.in/</link>
    <description>Recent content on Book Of Daniel</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>2024</copyright>
    <lastBuildDate>Mon, 09 Sep 2024 13:14:18 +0530</lastBuildDate>
    
        <atom:link href="https://bookofdaniel.in/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>Installing Kafka and Kafka Connect on Seperate Servers</title>
        <link>https://bookofdaniel.in/posts/installing-kafka-and-kafka-connect-on-seperate-servers/</link>
        <pubDate>Mon, 09 Sep 2024 13:14:18 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/installing-kafka-and-kafka-connect-on-seperate-servers/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/installing-kafka-and-kafka-connect-on-seperate-servers/ -&lt;p&gt;Installing Kafka and Kafka Connect on separate servers allows for better resource management, especially in production environments where Kafka brokers and Connectors may need dedicated hardware. This guide will walk you through the steps to set up Kafka and Kafka Connect on separate Linux servers, using Ubuntu 24.04.&lt;/p&gt;
&lt;h3 id=&#34;prerequisites&#34;&gt;Prerequisites&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Two Linux machines&lt;/strong&gt; (Ubuntu 24.04)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Inbound ports opened&lt;/strong&gt; on both servers:
&lt;ul&gt;
&lt;li&gt;Kafka broker ports: 9092, 9093&lt;/li&gt;
&lt;li&gt;Kafka Connect REST port: 8083&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Java 11 (OpenJDK)&lt;/strong&gt; installed on both servers&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-1-set-up-kafka-on-the-first-server&#34;&gt;Step 1: Set Up Kafka on the First Server&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set the hostname&lt;/strong&gt; for the Kafka server:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo hostnamectl set-hostname kafka-server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/hosts
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Replace &lt;code&gt;127.0.1.1&lt;/code&gt; with your new hostname.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install necessary updates&lt;/strong&gt;:
Update and upgrade your server with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Reboot the server to apply changes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install OpenJDK&lt;/strong&gt;:
Kafka requires Java to run. Install OpenJDK 11:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install openjdk-11-jdk -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify the installation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download and Extract Kafka&lt;/strong&gt;:
Download Kafka from the official site:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://dlcdn.apache.org/kafka/3.8.0/kafka_2.13-3.8.0.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xzf kafka_2.13-3.8.0.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mv kafka_2.13-3.8.0 /opt/kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Kafka User and Group&lt;/strong&gt;:
For better management, create a dedicated service account:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo groupadd kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo useradd -r -g kafka -d /opt/kafka -s /bin/false kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown -R kafka:kafka /opt/kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configure Kafka&lt;/strong&gt;:
Kafka stores logs in &lt;code&gt;/tmp&lt;/code&gt; by default. To make management easier, move the logs to &lt;code&gt;/var/log/kafka&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mkdir -p /var/log/kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown -R kafka:kafka /var/log/kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chmod -R &lt;span style=&#34;color:#a5d6ff&#34;&gt;755&lt;/span&gt; /var/log/kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Edit the Kafka Configuration&lt;/strong&gt;:
Update the &lt;code&gt;server.properties&lt;/code&gt; file to listen on all interfaces:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /opt/kafka/config/kraft/server.properties
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the following lines:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;listeners=PLAINTEXT://0.0.0.0:9092
advertised.listeners=PLAINTEXT://&amp;lt;Kafka_Server_IP&amp;gt;:9092
log.dirs=/var/log/kafka
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Format the Log Directory&lt;/strong&gt;: Change directory to Kafka folder and
format the storage with a unique cluster ID:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;KAFKA_CLUSTER_ID&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;$(&lt;/span&gt;bin/kafka-storage.sh random-uuid&lt;span style=&#34;color:#ff7b72&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo -u kafka bin/kafka-storage.sh format -t &lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_CLUSTER_ID&lt;/span&gt; -c config/kraft/server.properties
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Up Kafka as a Systemd Service&lt;/strong&gt;:
Create a service file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/systemd/system/kafka.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the following content:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Unit]
Description=Apache Kafka Server (KRaft Mode)
After=network.target

[Service]
User=kafka
Group=kafka
ExecStart=/opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/kraft/server.properties
ExecStop=/opt/kafka/bin/kafka-server-stop.sh
Restart=on-failure
RestartSec=10

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enable and start the Kafka service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable kafka
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl status kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;step-2-set-up-kafka-connect-on-the-second-server&#34;&gt;Step 2: Set Up Kafka Connect on the Second Server&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install necessary updates&lt;/strong&gt;:
Update and upgrade your server with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt upgrade
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Reboot the server to apply changes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Install Java on Kafka Connect Server&lt;/strong&gt;:
Just like with the Kafka server, install Java:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install openjdk-11-jdk -y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;java -version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download and Extract Kafka Connect&lt;/strong&gt;:
Kafka Connect is part of the Kafka package, so download Kafka here too:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://dlcdn.apache.org/kafka/3.8.0/kafka_2.13-3.8.0.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tar -xzf kafka_2.13-3.8.0.tgz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mv kafka_2.13-3.8.0 /opt/kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Configure Kafka Connect&lt;/strong&gt;:
Edit the &lt;code&gt;connect-distributed.properties&lt;/code&gt; file to configure Kafka Connect:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /opt/kafka/config/connect-distributed.properties
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update the plugin path:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;plugin.path=/opt/kafka/connectors
bootstrap.servers=&amp;lt;Kafka_Server_IP&amp;gt;:9092
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Create a Connectors Directory&lt;/strong&gt;:
Create a directory for Kafka Connect plugins:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mkdir /opt/kafka/connectors
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown kafka:kafka /opt/kafka/connectors
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Set Up Kafka Connect as a Systemd Service&lt;/strong&gt;:
Create a service file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo nano /etc/systemd/system/kafka-connect.service
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add the following content:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Unit]
Description=Kafka Connect Distributed Mode Service
After=network.target

[Service]
User=kafka
Group=kafka
ExecStart=/opt/kafka/bin/connect-distributed.sh /opt/kafka/config/connect-distributed.properties
Restart=on-failure
RestartSec=10
Environment=&amp;#34;KAFKA_HEAP_OPTS=-Xmx1G -Xms1G&amp;#34;

[Install]
WantedBy=multi-user.target
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Enable and start the Kafka Connect service:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl daemon-reload
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl start kafka-connect
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable kafka-connect
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl status kafka-connect
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;step-3-verify-the-installation&#34;&gt;Step 3: Verify the Installation&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;On the Kafka server, check the Kafka logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo journalctl -u kafka
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;On the Kafka Connect server, check the Kafka Connect logs:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo journalctl -u kafka-connect
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;step-4-install-and-configure-debezium-optional&#34;&gt;Step 4: Install and Configure Debezium (Optional)&lt;/h3&gt;
&lt;p&gt;If you want to set up Debezium for change data capture (CDC), follow these steps:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Download Debezium SQL Server Connector&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wget https://repo1.maven.org/maven2/io/debezium/debezium-connector-sqlserver/2.7.1.Final/debezium-connector-sqlserver-2.7.1.Final-plugin.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tar -xzf debezium-connector-sqlserver-2.7.1.Final-plugin.tar.gz -C /opt/kafka/connectors/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown -R kafka:kafka /opt/kafka/connectors/debezium-connector-sqlserver
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Restart Kafka Connect&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart kafka-connect
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Verify the Plugin&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -s localhost:8083/connector-plugins | jq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;commands-for-troubleshooting&#34;&gt;Commands for TroubleShooting&lt;/h3&gt;
&lt;h4 id=&#34;kafka&#34;&gt;Kafka&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# List all the topics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Creating new topic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-topics.sh --create --topic first-topic --bootstrap-server localhost:9092
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Get information about the topic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-topics.sh --describe --topic first-topic --bootstrap-server localhost:9092
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Read the messages from the topics&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-console-consumer.sh --topic first-topic --bootstrap-server localhost:9092
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Read the message before the consumer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;$KAFKA_HOME&lt;/span&gt;/bin/kafka-console-consumer.sh --topic first-topic --from-beginning --bootstrap-server localhost:9092
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Delete topic&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bin/kafka-topics.sh --delete --topic first-topic --bootstrap-server localhost:9092
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Example codes&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/kafka_2.13-3.8.0/bin/kafka-console-consumer.sh --bootstrap-server &amp;lt;SQL SERVER&amp;gt;:9092 --topic crewing.vessel.fake.crew --from-beginning | jq &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;.payload | { operation: .op, before: .before.crew_id , after: .after.crew_id ,first_name: .after.first_name, last_name: .after.last_name, change_lsn: .source.change_lsn, commit_lsn: .source.commit_lsn, transaction: .transaction.id }&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kafka-connect&#34;&gt;Kafka Connect&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# List all connectors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X GET http://localhost:8083/connectors
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Get status of the connectors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X GET http://localhost:8083/connectors/my-connector/status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Delete a connector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X DELETE http://localhost:8083/connectors/my-connector
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Update a connector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X PUT -H &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d @updated-connector-config.json http://localhost:8083/connectors/connector_name/config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Verifying the update of the connector&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -X GET http://localhost:8083/connectors/connector_name/config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;You have successfully installed Kafka and Kafka Connect on separate servers, ensuring that both services are set up for distributed, scalable processing. This setup is optimal for large-scale deployments and is ready for further configuration, such as integrating Debezium or other Kafka Connect plugins.&lt;/p&gt;
- https://bookofdaniel.in/posts/installing-kafka-and-kafka-connect-on-seperate-servers/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>How to Setup Kubernetes in Azure Virtual Machines</title>
        <link>https://bookofdaniel.in/posts/how-to-setup-kubernetes-in-azure-virtual-machines/</link>
        <pubDate>Fri, 06 Sep 2024 12:07:09 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/how-to-setup-kubernetes-in-azure-virtual-machines/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/how-to-setup-kubernetes-in-azure-virtual-machines/ -&lt;p&gt;Welcome to the hard way of installing Kubernetes in Azure Virtual Machines. The instructions will be moreover same for On-prem. For many developers, using managed Kubernetes services like GKE, EKS, or AKS can be convenient, but they often abstract away the intricate details of how a cluster operates under the hood.&lt;/p&gt;
&lt;h1 id=&#34;requirements&#34;&gt;Requirements&lt;/h1&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;NODES&lt;/th&gt;
&lt;th&gt;IP&lt;/th&gt;
&lt;th&gt;HOSTNAME&lt;/th&gt;
&lt;th&gt;MACHINE TYPE&lt;/th&gt;
&lt;th&gt;OPERATING SYSTEM&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;master&lt;/td&gt;
&lt;td&gt;172.16.39.14&lt;/td&gt;
&lt;td&gt;k8s-master.local&lt;/td&gt;
&lt;td&gt;Standard B2ms&lt;/td&gt;
&lt;td&gt;Ubuntu 24.04&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;k8s-worker1&lt;/td&gt;
&lt;td&gt;172.16.39.23&lt;/td&gt;
&lt;td&gt;k8s-worker1.local&lt;/td&gt;
&lt;td&gt;Standard B4ms&lt;/td&gt;
&lt;td&gt;Ubuntu 24.04&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1 id=&#34;provisioning-the-servers-in-azure&#34;&gt;Provisioning the Servers in Azure&lt;/h1&gt;
&lt;p&gt;To provision two Linux virtual machines (VMs) in Azure with the specified details, you can use the Azure CLI (az) to achieve this. Here’s how you can provision both machines using az vm create commands.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 1. Set common variables&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;RESOURCE_GROUP&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-cluster&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;LOCATION&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;eastus&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;MASTER_VM_NAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-master&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;WORKER_VM_NAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-worker1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;MASTER_IP&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;172.16.39.14&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;WORKER_IP&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;172.16.39.23&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;VNET_NAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-vnet&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;SUBNET_NAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-subnet&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;MASTER_HOSTNAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-master.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#79c0ff&#34;&gt;WORKER_HOSTNAME&lt;/span&gt;&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-worker1.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 2. Resource group creation&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az group create --name &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; --location &lt;span style=&#34;color:#79c0ff&#34;&gt;$LOCATION&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 3. Create a virtual network (VNet)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az network vnet create &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --name &lt;span style=&#34;color:#79c0ff&#34;&gt;$VNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --address-prefix 172.16.0.0/16 &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --subnet-name &lt;span style=&#34;color:#79c0ff&#34;&gt;$SUBNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --subnet-prefix 172.16.39.0/24
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 4. Create static IP addresses&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Create public IPs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az network public-ip create --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; --name masterPublicIP --allocation-method Static --sku Standard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az network public-ip create --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; --name worker1PublicIP --allocation-method Static --sku Standard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Create NIC for the master node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az network nic create &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --name masterNIC &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --vnet-name &lt;span style=&#34;color:#79c0ff&#34;&gt;$VNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --subnet &lt;span style=&#34;color:#79c0ff&#34;&gt;$SUBNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --private-ip-address &lt;span style=&#34;color:#79c0ff&#34;&gt;$MASTER_IP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --public-ip-address masterPublicIP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# Create NIC for the worker node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az network nic create &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --name worker1NIC &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --vnet-name &lt;span style=&#34;color:#79c0ff&#34;&gt;$VNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --subnet &lt;span style=&#34;color:#79c0ff&#34;&gt;$SUBNET_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --private-ip-address &lt;span style=&#34;color:#79c0ff&#34;&gt;$WORKER_IP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;        --public-ip-address worker1PublicIP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 5. Provision the master node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az vm create &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --name &lt;span style=&#34;color:#79c0ff&#34;&gt;$MASTER_VM_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --size Standard_B2ms &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --nics masterNIC &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --image Canonical:0001-com-ubuntu-server-jammy:24_04-lts:latest &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --admin-username azureuser &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --generate-ssh-keys &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --custom-data cloud-init.yaml &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --host-name &lt;span style=&#34;color:#79c0ff&#34;&gt;$MASTER_HOSTNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 6. Provision the worker node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az vm create &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --name &lt;span style=&#34;color:#79c0ff&#34;&gt;$WORKER_VM_NAME&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --size Standard_B4ms &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --nics worker1NIC &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --image Canonical:0001-com-ubuntu-server-jammy:24_04-lts:latest &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --admin-username azureuser &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --generate-ssh-keys &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --custom-data cloud-init.yaml &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;    --host-name &lt;span style=&#34;color:#79c0ff&#34;&gt;$WORKER_HOSTNAME&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;# 7. Verification&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    az vm list --resource-group &lt;span style=&#34;color:#79c0ff&#34;&gt;$RESOURCE_GROUP&lt;/span&gt; -o table
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will show you the VMs with their details. You should see &lt;code&gt;k8s-master&lt;/code&gt; and &lt;code&gt;k8s-worker1&lt;/code&gt; with the correct IP addresses and machine types.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;system-preparation-for-kubernetes-installation&#34;&gt;System Preparation for Kubernetes Installation&lt;/h1&gt;
&lt;p&gt;Before diving into the installation of Kubernetes, it&amp;rsquo;s essential to prepare your system for optimal performance and stability. This section outlines the necessary steps to get both the master and worker nodes ready for Kubernetes.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️ Execute the following commands on both master and worker nodes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-update-the-os&#34;&gt;1. Update the OS&lt;/h2&gt;
&lt;p&gt;First, ensure your system is up-to-date by running the following commands to update and upgrade all installed packages:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt upgrade -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;After the upgrade completes, reboot the system to apply all changes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo reboot
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-set-hostname&#34;&gt;2. Set Hostname&lt;/h2&gt;
&lt;p&gt;Assign meaningful hostnames to both your master and worker nodes. This makes it easier to identify and manage the nodes in your cluster.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Master Node&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo hostnamectl set-hostname &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-master.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Worker Node&lt;/strong&gt;:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo hostnamectl set-hostname &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;k8s-worker1.local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Next, update the &lt;code&gt;/etc/hosts&lt;/code&gt; file on both nodes to map the hostnames to their corresponding IP addresses. Add the following lines to the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;172.16.39.14 k8s-master.local
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;172.16.39.23 k8s-worker1.local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;3-disable-swap&#34;&gt;3. Disable Swap&lt;/h2&gt;
&lt;p&gt;Kubernetes requires swap to be disabled to function properly. This is crucial because the &lt;strong&gt;Kubelet&lt;/strong&gt;, the primary Kubernetes agent running on each node, does not handle memory swapping well. Enabling swap can lead to performance degradation and unpredictable behavior in your cluster.&lt;/p&gt;
&lt;p&gt;Disable swap immediately with the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo swapoff -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;/ swap / s/^/#/&amp;#39;&lt;/span&gt; /etc/fstab
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo mount -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By commenting out the swap entry in &lt;code&gt;/etc/fstab&lt;/code&gt;, this ensures swap remains disabled after a reboot. Verify swap is disabled with:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;free -h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The output should indicate that swap is set to 0:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               total        used        free      shared  buff/cache   available
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mem:           7.8Gi       1.4Gi       4.9Gi       5.0Mi       1.7Gi       6.3Gi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Swap:             0B          0B          0B
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-update-kernel-and-configure-modules&#34;&gt;4. Update Kernel and Configure Modules&lt;/h2&gt;
&lt;p&gt;For Kubernetes to run efficiently, specific kernel modules and network parameters need to be configured.&lt;/p&gt;
&lt;p&gt;First, create a configuration file for kernel modules:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tee /etc/modules-load.d/containerd.conf &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;overlay
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;br_netfilter
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;overlay&lt;/code&gt;: Used for overlay filesystems, which are essential for container storage.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;br_netfilter&lt;/code&gt;: Enables Kubernetes to manage network traffic between containers.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, load the required kernel modules:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo modprobe overlay
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo modprobe br_netfilter
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Set the necessary kernel parameters for Kubernetes by creating a configuration file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo tee /etc/sysctl.d/kubernetes.conf &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;lt;&amp;lt;EOF
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;net.bridge.bridge-nf-call-ip6tables = 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;net.bridge.bridge-nf-call-iptables = 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;net.ipv4.ip_forward = 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, reload the sysctl configuration to apply the new parameters:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sysctl --system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These steps ensure your system is properly prepared for the Kubernetes installation, providing a stable foundation for the cluster to run efficiently.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;installing-containerd-runtime-on-all-nodes&#34;&gt;Installing Containerd Runtime on All Nodes&lt;/h1&gt;
&lt;p&gt;A critical component of any Kubernetes cluster is the &lt;strong&gt;container runtime&lt;/strong&gt;, which is responsible for running containers on each node. &lt;strong&gt;Containerd&lt;/strong&gt; is a lightweight and powerful runtime that provides essential container lifecycle management, including image transfer, storage, and execution. Originally developed as part of Docker, it is now a key part of the Cloud Native Computing Foundation (CNCF) and is favored for Kubernetes environments due to its simplicity and performance.&lt;/p&gt;
&lt;p&gt;To install &lt;strong&gt;containerd&lt;/strong&gt; on all nodes in your Kubernetes cluster, follow these steps:&lt;/p&gt;
&lt;p&gt;First, ensure that the necessary packages and dependencies are installed:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y curl gnupg2 software-properties-common apt-transport-https ca-certificates
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Add Docker’s official GPG key and Docker’s repository to your system:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmour -o /etc/apt/trusted.gpg.d/docker.gpg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo add-apt-repository &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;deb [arch=amd64] https://download.docker.com/linux/ubuntu &lt;/span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;$(&lt;/span&gt;lsb_release -cs&lt;span style=&#34;color:#ff7b72&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#a5d6ff&#34;&gt; stable&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Update your package lists to include the newly added Docker repository, and install &lt;strong&gt;containerd&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt install -y containerd.io
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Once &lt;strong&gt;containerd&lt;/strong&gt; is installed, you need to configure it to work with &lt;strong&gt;Kubernetes&lt;/strong&gt;. Generate the default configuration file and enable &lt;strong&gt;SystemdCgroup&lt;/strong&gt;, which ensures that &lt;strong&gt;containerd&lt;/strong&gt; integrates smoothly with Kubernetes, particularly when using systemd for process management:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;containerd config default | sudo tee /etc/containerd/config.toml &amp;gt;/dev/null 2&amp;gt;&amp;amp;&lt;span style=&#34;color:#a5d6ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo sed -i &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;s/SystemdCgroup = false/SystemdCgroup = true/g&amp;#39;&lt;/span&gt; /etc/containerd/config.toml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Finally, restart and enable the &lt;strong&gt;containerd&lt;/strong&gt; service so that it starts automatically on system boot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl restart containerd
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable containerd
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;By following these steps, you’ll have a robust and efficient container runtime in place, ready for Kubernetes. Repeat this process on each node to ensure consistency across the cluster.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;installing-kubeadm-kubelet-and-kubectl&#34;&gt;Installing Kubeadm, Kubelet, and Kubectl&lt;/h1&gt;
&lt;p&gt;Now that your system is prepared, it&amp;rsquo;s time to install the essential Kubernetes components on all of your machines: &lt;strong&gt;kubeadm&lt;/strong&gt;, &lt;strong&gt;kubelet&lt;/strong&gt;, and &lt;strong&gt;kubectl&lt;/strong&gt;.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;kubeadm&lt;/strong&gt;: This tool helps bootstrap the Kubernetes cluster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kubelet&lt;/strong&gt;: The agent that runs on all nodes in the cluster, responsible for running pods and containers.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;kubectl&lt;/strong&gt;: A command-line utility that lets you interact with the Kubernetes cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;It&amp;rsquo;s important to note that &lt;strong&gt;kubeadm&lt;/strong&gt; will not manage or install &lt;strong&gt;kubelet&lt;/strong&gt; or &lt;strong&gt;kubectl&lt;/strong&gt; for you, so you must ensure that all these tools are on the correct version. Mismatches between &lt;strong&gt;kubeadm&lt;/strong&gt;, &lt;strong&gt;kubelet&lt;/strong&gt;, and &lt;strong&gt;kubectl&lt;/strong&gt; versions can result in instability. Kubernetes does allow a one-minor-version difference between the &lt;strong&gt;kubelet&lt;/strong&gt; and the control plane, but the &lt;strong&gt;kubelet&lt;/strong&gt; version should never exceed the API server version. For example, &lt;strong&gt;kubelet&lt;/strong&gt; v1.7.0 can work with an API server running v1.8.0, but not the other way around.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Additionally, as of &lt;strong&gt;September 13, 2023&lt;/strong&gt;, Kubernetes has moved to a new package repository hosted at &lt;strong&gt;pkgs.k8s.io&lt;/strong&gt;, which you must use to install any Kubernetes versions after v1.24. The legacy repositories (apt.kubernetes.io) are deprecated and may be removed without notice.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Follow the steps below to install these packages for Kubernetes v1.31:&lt;/p&gt;
&lt;h2 id=&#34;1-update-package-index-and-install-dependencies&#34;&gt;1. Update Package Index and Install Dependencies&lt;/h2&gt;
&lt;p&gt;Start by updating the system’s package index and installing the necessary dependencies:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install -y apt-transport-https ca-certificates curl gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-add-the-kubernetes-signing-key&#34;&gt;2. Add the Kubernetes Signing Key&lt;/h2&gt;
&lt;p&gt;Download the Kubernetes signing key for the package repositories. If the directory &lt;code&gt;/etc/apt/keyrings&lt;/code&gt; doesn&amp;rsquo;t exist, create it before running the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This ensures that you are installing authentic Kubernetes packages.&lt;/p&gt;
&lt;h2 id=&#34;3-add-the-kubernetes-v131-repository&#34;&gt;3. Add the Kubernetes v1.31 Repository&lt;/h2&gt;
&lt;p&gt;Add the Kubernetes v1.31 repository to your system’s sources list. If you need a different version, modify the version number in the URL accordingly:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;echo &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /&amp;#39;&lt;/span&gt; | sudo tee /etc/apt/sources.list.d/kubernetes.list
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;4-install-kubelet-kubeadm-and-kubectl&#34;&gt;4. Install Kubelet, Kubeadm, and Kubectl&lt;/h2&gt;
&lt;p&gt;Once the repository is added, update your package list and install &lt;strong&gt;kubeadm&lt;/strong&gt;, &lt;strong&gt;kubelet&lt;/strong&gt;, and &lt;strong&gt;kubectl&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-get install -y kubelet kubeadm kubectl
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo apt-mark hold kubelet kubeadm kubectl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Marking the packages with &lt;code&gt;apt-mark hold&lt;/code&gt; ensures they won&amp;rsquo;t be accidentally updated during system upgrades, which is important for maintaining version stability across your cluster.&lt;/p&gt;
&lt;h2 id=&#34;5-enable-the-kubelet-service-optional&#34;&gt;5. Enable the Kubelet Service (Optional)&lt;/h2&gt;
&lt;p&gt;Before you bootstrap the Kubernetes cluster with &lt;strong&gt;kubeadm&lt;/strong&gt;, you can enable the &lt;strong&gt;kubelet&lt;/strong&gt; service to start automatically on boot:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo systemctl enable --now kubelet
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;These steps install the core tools required for setting up and managing your Kubernetes cluster. Make sure to follow them carefully on both your master and worker nodes.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Here’s the blog paragraph based on your snippet:&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;initializing-the-kubernetes-cluster-with-kubeadm&#34;&gt;Initializing the Kubernetes Cluster with Kubeadm&lt;/h1&gt;
&lt;p&gt;With &lt;strong&gt;kubeadm&lt;/strong&gt;, &lt;strong&gt;kubelet&lt;/strong&gt;, and &lt;strong&gt;kubectl&lt;/strong&gt; installed on your master and worker nodes, it’s time to initialize the Kubernetes cluster.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️ This step should only be executed on the master node, as it sets up the control plane that will manage the cluster.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;To begin, use the following command on your &lt;strong&gt;master node&lt;/strong&gt; to initialize the cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo kubeadm init &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;  --pod-network-cidr&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;10.10.0.0/16 &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;  --control-plane-endpoint&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;=&lt;/span&gt;k8s-master.local
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;pod-network-cidr=10.10.0.0/16&lt;/strong&gt;: This specifies the CIDR range for the pod network. You can modify this value based on your network architecture.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;control-plane-endpoint=k8s-master.local&lt;/strong&gt;: This is the DNS or IP address of your control plane (master node). Ensure that the DNS or IP is resolvable by all worker nodes in your cluster.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;After running this command, kubeadm will perform the following tasks:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Download and install the necessary control plane components such as &lt;strong&gt;etcd&lt;/strong&gt;, &lt;strong&gt;kube-apiserver&lt;/strong&gt;, &lt;strong&gt;kube-scheduler&lt;/strong&gt;, and &lt;strong&gt;kube-controller-manager&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;Set up your cluster according to the parameters provided.&lt;/li&gt;
&lt;li&gt;Generate a join token that worker nodes can use to join the cluster.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once the initialization is complete, kubeadm will output instructions to finish setting up &lt;strong&gt;kubectl&lt;/strong&gt; on the master node and provide the join command for your worker nodes.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Notes:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The &lt;code&gt;--pod-network-cidr&lt;/code&gt; value must align with the configuration of the pod network solution (e.g., Calico, Flannel) you plan to deploy.&lt;/li&gt;
&lt;li&gt;Make sure that the control plane endpoint (&lt;code&gt;k8s-master.local&lt;/code&gt;) is properly configured in your DNS or &lt;code&gt;/etc/hosts&lt;/code&gt; file so that all nodes can resolve it.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At this point, the control plane will be ready, and the next step will be to install a network add-on to allow pod-to-pod communication within the cluster.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;azureuser@k8s-master:~$ sudo kubeadm init \
  --pod-network-cidr=10.10.0.0/16 \
  --control-plane-endpoint=k8s-master.local
[init] Using Kubernetes version: v1.26.1
[preflight] Running pre-flight checks
[preflight] Pulling images required for setting up a Kubernetes cluster
[preflight] This might take a minute or two, depending on the speed of your internet connection
[preflight] You can also perform this action in beforehand using &amp;#39;kubeadm config images pull&amp;#39;
[certs] Using certificateDir folder &amp;#34;/etc/kubernetes/pki&amp;#34;
[certs] Generating &amp;#34;ca&amp;#34; certificate and key
[certs] Generating &amp;#34;apiserver&amp;#34; certificate and key
[certs] apiserver serving cert is signed for DNS names [k8s-master.local kubernetes kubernetes.default kubernetes.default.svc kubernetes.default.svc.cluster.local] and IPs [10.96.0.1 192.168.1.10]
[certs] Generating &amp;#34;apiserver-kubelet-client&amp;#34; certificate and key
[certs] Generating &amp;#34;front-proxy-ca&amp;#34; certificate and key
[certs] Generating &amp;#34;front-proxy-client&amp;#34; certificate and key
[certs] Generating &amp;#34;etcd/ca&amp;#34; certificate and key
[certs] Generating &amp;#34;etcd/server&amp;#34; certificate and key
[certs] etcd/server serving cert is signed for DNS names [k8s-master.local localhost] and IPs [192.168.1.10 127.0.0.1 ::1]
[certs] Generating &amp;#34;etcd/peer&amp;#34; certificate and key
[certs] etcd/peer serving cert is signed for DNS names [k8s-master.local localhost] and IPs [192.168.1.10 127.0.0.1 ::1]
[certs] Generating &amp;#34;etcd/healthcheck-client&amp;#34; certificate and key
[certs] Generating &amp;#34;apiserver-etcd-client&amp;#34; certificate and key
[certs] Generating &amp;#34;sa&amp;#34; key and public key
[kubeconfig] Using kubeconfig folder &amp;#34;/etc/kubernetes&amp;#34;
[kubeconfig] Writing &amp;#34;admin.conf&amp;#34; kubeconfig file
[kubeconfig] Writing &amp;#34;kubelet.conf&amp;#34; kubeconfig file
[kubeconfig] Writing &amp;#34;controller-manager.conf&amp;#34; kubeconfig file
[kubeconfig] Writing &amp;#34;scheduler.conf&amp;#34; kubeconfig file
[kubelet-start] Writing kubelet environment file with flags to file &amp;#34;/var/lib/kubelet/kubeadm-flags.env&amp;#34;
[kubelet-start] Writing kubelet configuration to file &amp;#34;/var/lib/kubelet/config.yaml&amp;#34;
[kubelet-start] Starting the kubelet
[control-plane] Using manifest folder &amp;#34;/etc/kubernetes/manifests&amp;#34;
[control-plane] Creating static Pod manifest for &amp;#34;kube-apiserver&amp;#34;
[control-plane] Creating static Pod manifest for &amp;#34;kube-controller-manager&amp;#34;
[control-plane] Creating static Pod manifest for &amp;#34;kube-scheduler&amp;#34;
[etcd] Creating static Pod manifest for local etcd in &amp;#34;/etc/kubernetes/manifests&amp;#34;
[wait-control-plane] Waiting for the kubelet to boot up the control plane as static Pods from directory &amp;#34;/etc/kubernetes/manifests&amp;#34;. This can take up to 4m0s
[apiclient] All control plane components are healthy after 7.503422 seconds
[upload-config] Storing the configuration used in ConfigMap &amp;#34;kubeadm-config&amp;#34; in the &amp;#34;kube-system&amp;#34; Namespace
[kubelet] Creating a ConfigMap &amp;#34;kubelet-config&amp;#34; in namespace kube-system with the configuration for the kubelets in the cluster
[upload-certs] Skipping phase. Please see --upload-certs
[mark-control-plane] Marking the node k8s-master.local as control-plane by adding the labels: [node-role.kubernetes.io/control-plane node.kubernetes.io/exclude-from-external-load-balancers]
[mark-control-plane] Marking the node k8s-master.local as control-plane by adding the taints [node-role.kubernetes.io/control-plane:NoSchedule]
[bootstrap-token] Using token: daii9y.g4dq24u6irkz4pt0
[bootstrap-token] Configuring bootstrap tokens, cluster-info ConfigMap,RBAC Roles
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to get nodes
[bootstrap-token] Configured RBAC rules to allow Node Bootstrap tokens to post CSRs in order for nodes to get long term certificate credentials
[bootstrap-token] Configured RBAC rules to allow the csrapprover controller automatically approve CSRs from a Node Bootstrap Token
[bootstrap-token] Configured RBAC rules to allow certificate rotation for all node client certificates in the cluster
[bootstrap-token] Creating the &amp;#34;cluster-info&amp;#34; ConfigMap in the &amp;#34;kube-public&amp;#34; namespace
[kubelet-finalize] Updating &amp;#34;/etc/kubernetes/kubelet.conf&amp;#34; to point to a rotatable kubelet client certificate and key
[addons] Applied essential addon: CoreDNS
[addons] Applied essential addon: kube-proxy

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regularuser:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config==

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

You should now deploy a pod network to the cluster.
Run &amp;#34;kubectl apply -f [podnetwork].yaml&amp;#34; with one of the options listedat:
  https://kubernetes.io/docs/concepts/cluster-administration/addons/

You can now join any number of control-plane nodes by copying certificate authorities
and service account keys on each node and then running the following asroot:

  kubeadm join k8s-master.local:6443 --token daii9y.g4dq24u6irkz4pt0 \
        --discovery-token-ca-cert-hash sha256:58b9cc96ed57a5797fddea653756dbda830efbff55b720a10cffb3948d489148 \
        --control-plane

Then you can join any number of worker nodes by running the following on each as root:

kubeadm join k8s-master.local:6443 --token daii9y.g4dq24u6irkz4pt0 \
        --discovery-token-ca-cert-hash sha256:58b9cc96ed57a5797fddea653756dbda830efbff55b720a10cffb3948d489148
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;ℹ️ Now, As shown in the output execute below command in master node.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mkdir -p &lt;span style=&#34;color:#79c0ff&#34;&gt;$HOME&lt;/span&gt;/.kube
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo cp -i /etc/kubernetes/admin.conf &lt;span style=&#34;color:#79c0ff&#34;&gt;$HOME&lt;/span&gt;/.kube/config
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sudo chown &lt;span style=&#34;color:#ff7b72&#34;&gt;$(&lt;/span&gt;id -u&lt;span style=&#34;color:#ff7b72&#34;&gt;)&lt;/span&gt;:&lt;span style=&#34;color:#ff7b72&#34;&gt;$(&lt;/span&gt;id -g&lt;span style=&#34;color:#ff7b72&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;$HOME&lt;/span&gt;/.kube/config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Verify the cluster status:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl cluster-info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl cluster-info
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kubernetes control plane is running at https://k8s-master.local:6443
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CoreDNS is running at https://k8s-master.local:6443/api/v1/namespaces/kube-system/services/kube-dns:dns/proxy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To further debug and diagnose cluster problems, use &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;kubectl cluster-info dump&amp;#39;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                    STATUS   ROLES           AGE    VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k8s-master.local        Ready    control-plane   3d3h   v1.30.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;It seems the control plane is running, we will proceed to add worker nodes to this cluster.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;adding-worker-nodes-to-the-kubernetes-cluster&#34;&gt;Adding Worker Nodes to the Kubernetes Cluster&lt;/h1&gt;
&lt;p&gt;After initializing the Kubernetes cluster on the master node, it&amp;rsquo;s time to add your worker nodes to the cluster. This will allow the control plane to distribute workloads across the nodes and manage them.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️ To add a worker node, you need to execute the kubeadm join command in worker nodes.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;This command securely connects the worker node to the control plane. the command typically looks something like this:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubeadm join k8s-master.local:6443 --token daii9y.g4dq24u6irkz4pt0 &lt;span style=&#34;color:#79c0ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#79c0ff&#34;&gt;&lt;/span&gt;  --discovery-token-ca-cert-hash sha256:58b9cc96ed57a5797fddea653756dbda830efbff55b720a10cffb3948d489148
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;k8s-master.local:6443&lt;/strong&gt;: This is the control plane endpoint (master node&amp;rsquo;s address).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;token&lt;/strong&gt;: The token generated during the kubeadm init process, which allows the worker node to authenticate with the control plane.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;ndash;discovery-token-ca-cert-hash&lt;/strong&gt;: A hash that ensures the worker node securely discovers the control plane’s certificate authority.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Once this command completes successfully, the worker node will be part of the Kubernetes cluster, ready to run workloads distributed by the control plane. You can verify that the node has joined the cluster by running the following command on the master node:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                    STATUS   ROLES           AGE    VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k8s-master.local        Ready    control-plane   3d3h   v1.30.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k8s-worker1.local       Ready    &amp;lt;none&amp;gt;          3d3h   v1.30.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This will list all nodes, including the newly added workers, along with their status in the cluster.&lt;/p&gt;
&lt;p&gt;Repeat the process for each worker node to ensure that all machines are part of the cluster.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Here’s the updated blog paragraph with the &lt;code&gt;sed&lt;/code&gt; command for editing the Calico manifest:&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;installing-calico-v3281-pod-network-for-the-kubernetes-cluster&#34;&gt;Installing Calico (v3.28.1) Pod Network for the Kubernetes Cluster&lt;/h1&gt;
&lt;p&gt;In order to allow communication between the pods in your cluster, you&amp;rsquo;ll need to install a network add-on. One of the most popular options is &lt;strong&gt;Calico&lt;/strong&gt;, which provides networking and network security capabilities for Kubernetes. Below, we&amp;rsquo;ll walk through how to install &lt;strong&gt;Calico&lt;/strong&gt; on your Kubernetes cluster.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ℹ️ These commands should be run only on the &lt;strong&gt;master node&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;1-download-the-calico-manifest-file&#34;&gt;1. Download the Calico Manifest File&lt;/h2&gt;
&lt;p&gt;To begin, download the Calico manifest file, which is pre-configured for clusters with fewer than 50 nodes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://raw.githubusercontent.com/projectcalico/calico/v3.28.1/manifests/calico.yaml -O
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This file contains all the necessary configuration to deploy Calico on your Kubernetes cluster.&lt;/p&gt;
&lt;h2 id=&#34;2-edit-the-calico-manifest-using-sed&#34;&gt;2. Edit the Calico Manifest Using &lt;code&gt;sed&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;To streamline the process of modifying the &lt;strong&gt;CALICO_IPV4POOL_CIDR&lt;/strong&gt; in the &lt;strong&gt;calico.yaml&lt;/strong&gt; file, you can use the following &lt;code&gt;sed&lt;/code&gt; command. This automatically updates the pod network CIDR without manually opening the file:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sed -i &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#39;s/value: &amp;#34;192.168.0.0\/16&amp;#34;/value: &amp;#34;10.10.0.0\/16&amp;#34;/&amp;#39;&lt;/span&gt; calico.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This command ensures that the pod network CIDR matches the one you specified during cluster initialization (&lt;code&gt;10.10.0.0/16&lt;/code&gt;).&lt;/p&gt;
&lt;h2 id=&#34;3-apply-the-calico-manifest&#34;&gt;3. Apply the Calico Manifest&lt;/h2&gt;
&lt;p&gt;Once the manifest is updated, install Calico by applying the configuration using &lt;strong&gt;kubectl&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl apply -f calico.yaml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Calico will be deployed on your cluster, enabling pod-to-pod communication and enforcing network policies.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl apply -f calico.yaml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;poddisruptionbudget.policy/calico-kube-controllers created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;serviceaccount/calico-kube-controllers created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;serviceaccount/calico-node created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;configmap/calico-config created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/bgpconfigurations.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/bgppeers.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/blockaffinities.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/caliconodestatuses.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/clusterinformations.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/felixconfigurations.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/globalnetworkpolicies.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/globalnetworksets.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/hostendpoints.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/ipamblocks.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/ipamconfigs.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/ipamhandles.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/ippools.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/ipreservations.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/kubecontrollersconfigurations.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/networkpolicies.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;customresourcedefinition.apiextensions.k8s.io/networksets.crd.projectcalico.org created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrole.rbac.authorization.k8s.io/calico-kube-controllers created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrole.rbac.authorization.k8s.io/calico-node created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrolebinding.rbac.authorization.k8s.io/calico-kube-controllers created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;clusterrolebinding.rbac.authorization.k8s.io/calico-node created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;daemonset.apps/calico-node created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;deployment.apps/calico-kube-controllers created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;verifying-the-k8s-installation&#34;&gt;Verifying the K8s Installation&lt;/h1&gt;
&lt;p&gt;You can verify that Calico is running correctly by checking the status of the pods in the &lt;code&gt;kube-system&lt;/code&gt; namespace:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get pods -n kube-system
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl get pods -n kube-system
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                           READY   STATUS    RESTARTS        AGE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;calico-kube-controllers-77d59654f4-25crd       1/1     Running   &lt;span style=&#34;color:#a5d6ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;(&lt;/span&gt;3h59m ago&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;)&lt;/span&gt;   3d3h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;calico-node-hqf82                              1/1     Running   &lt;span style=&#34;color:#a5d6ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;(&lt;/span&gt;3h59m ago&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;)&lt;/span&gt;   3d3h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;calico-node-jxwbm                              1/1     Running   &lt;span style=&#34;color:#a5d6ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;(&lt;/span&gt;3h55m ago&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;)&lt;/span&gt;   3d3h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;coredns-7db6d8ff4d-6f9cn                       1/1     Running   &lt;span style=&#34;color:#a5d6ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;(&lt;/span&gt;3h59m ago&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;)&lt;/span&gt;   3d4h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;coredns-7db6d8ff4d-dnzq2                       1/1     Running   &lt;span style=&#34;color:#a5d6ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;(&lt;/span&gt;3h59m ago&lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;)&lt;/span&gt;   3d4h
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;You should see Calico components such as &lt;code&gt;calico-node&lt;/code&gt; and &lt;code&gt;calico-kube-controllers&lt;/code&gt; running successfully.&lt;/p&gt;
&lt;p&gt;With Calico installed, your Kubernetes cluster is now fully networked, allowing pods to communicate across nodes as necessary. You can also configure Calico for advanced network security features if needed.&lt;/p&gt;
&lt;p&gt;Now if we check the status of the nodes, the status will be Ready.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output&lt;/strong&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;azureuser@k8s-master:~$ kubectl get nodes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                    STATUS   ROLES           AGE    VERSION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k8s-master.local    Ready    control-plane   3d4h   v1.30.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;k8s-worker1.local   Ready    &amp;lt;none&amp;gt;          3d4h   v1.30.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;Congrats, if you reach till the end 😊. You are a soldier 🪖.&lt;/p&gt;
- https://bookofdaniel.in/posts/how-to-setup-kubernetes-in-azure-virtual-machines/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>Port Not Available: 503 Server Unavailable</title>
        <link>https://bookofdaniel.in/posts/port-not-available/</link>
        <pubDate>Sat, 10 Aug 2024 12:53:44 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/port-not-available/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/port-not-available/ -&lt;p&gt;&lt;strong&gt;Yes, you read that right.&lt;/strong&gt; The port you’re trying to use is already occupied by another application. If you’re a system or network administrator, you’ve likely encountered this frustrating message more times than you care to remember. It’s challenging to pinpoint which application is hogging the port (though it’s not as hard as it seems, as I’ll show you 😉). These ghost messages can leave you in quite a pickle.&lt;/p&gt;
&lt;p&gt;Just yesterday, we faced this exact issue and wasted two hours troubleshooting so that you don’t have to!&lt;/p&gt;
&lt;p&gt;Our situation was this: We had installed SQL Server 2019 Reporting Services on one of our development servers, and the default port it selected for installation was &lt;code&gt;8082&lt;/code&gt;. Unfortunately, this port was already in use by our front-facing application, so we needed to free it up.&lt;/p&gt;
&lt;img title=&#34;Port Not Available&#34; alt=&#34;Port Not Available&#34; src=&#34;https://bookofdaniel.in/images/not listening.gif&#34;&gt;
&lt;p&gt;After some frantic Googling, we found a solution: we updated the port from &lt;code&gt;8082&lt;/code&gt; to &lt;code&gt;8083&lt;/code&gt; in the &lt;code&gt;config.json&lt;/code&gt; file located in the Reporting Services folder. (You can usually find the file here: &lt;code&gt;C:\Program Files\Microsoft SQL Server Reporting Services\SSRS\RSHostingService\RSHostingService.exe&lt;/code&gt;.) We then restarted the &lt;code&gt;SQL Server Reporting Services&lt;/code&gt; Windows service, and voilà—&lt;code&gt;RSHostingService.exe&lt;/code&gt; started running on port &lt;code&gt;8083&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;We thought everything was resolved and that port &lt;code&gt;8082&lt;/code&gt; was free. However, when we configured our front-end application and tried to access it, we were greeted with a &lt;code&gt;503 Server Unavailable&lt;/code&gt; error. 😢&lt;/p&gt;
&lt;h2 id=&#34;troubleshooting-port-availability&#34;&gt;Troubleshooting Port Availability&lt;/h2&gt;
&lt;p&gt;To narrow down the issue, it’s helpful to identify which application is using the port.&lt;/p&gt;
&lt;h3 id=&#34;finding-the-process-using-netstat&#34;&gt;Finding the Process Using &lt;code&gt;netstat&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;The &lt;strong&gt;netstat&lt;/strong&gt; command, short for &amp;ldquo;network statistics,&amp;rdquo; is a command-line tool that displays active network connections, routing tables, and various network interface statistics. By running the &lt;code&gt;netstat&lt;/code&gt; command with the &lt;code&gt;noa&lt;/code&gt; parameters, we can list all the listening ports with process ID information and pipe that command to search for the specific port.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -noa | find &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;8082&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TCP    0.0.0.0:8082           0.0.0.0:0              LISTENING       4
TCP    [::]:8082              [::]:0                 LISTENING       4
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;The process ID &lt;code&gt;4&lt;/code&gt; indicates that it’s a system process. Unfortunately, this doesn’t tell us which application is using the port, so we need another method.&lt;/p&gt;
&lt;h3 id=&#34;finding-the-process-using-netsh&#34;&gt;Finding the Process Using &lt;code&gt;netsh&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Netsh&lt;/strong&gt;, short for &lt;strong&gt;Network Shell&lt;/strong&gt;, is a command-line utility that allows users to configure and manage network devices both locally and remotely. It’s particularly useful for tasks like changing IP addresses, resetting the TCP/IP stack, and managing wireless settings.&lt;/p&gt;
&lt;p&gt;We can use &lt;code&gt;netsh&lt;/code&gt; to query the HTTP request and find out which process is using port &lt;code&gt;8082&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh http show servicestate view=requestq
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Save the output of the above command to a file, open it using Notepad, and search for the port details:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh http show servicestate view=requestq &amp;gt; results.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;notepad results.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Request queue name: Request queue is unnamed.
    Version: 2.0
    State: Active
    Request queue 503 verbosity level: Basic
    Max requests: 1000
    Number of active processes attached: 1
    Process IDs:
        2312
    URL groups:
    URL group ID: BE00000340000001
        State: Active
        Request queue name: Request queue is unnamed.
        Properties:
            Max bandwidth: inherited
            Max connections: inherited
            Timeouts:
                Timeout values inherited
            Number of registered URLs: 1
            Registered URLs:
                HTTP://LOCALHOST:8082/
        Server session ID: C000000320000001
            Version: 2.0
            State: Active
            Properties:
                Max bandwidth: 4294967295
                Timeouts:
                    Entity body timeout (secs): 120
                    Drain entity body timeout (secs): 120
                    Request queue timeout (secs): 120
                    Idle connection timeout (secs): 120
                    Header wait timeout (secs): 120
                    Minimum send rate (bytes/sec): 150
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Now you can see that port &lt;code&gt;8082&lt;/code&gt; is being used by process &lt;code&gt;2312&lt;/code&gt;. You can check Task Manager to see which process is associated with this PID, or use the following command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tasklist /FI &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;PID eq 2312&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Image Name                     PID Session Name        Session#    Mem Usage
========================= ======== ================ =========== ============
SQLServerReportingServices     2312 Services                   0     42,232 K
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;what-the-heck-&#34;&gt;What the Heck?! 😮&lt;/h2&gt;
&lt;p&gt;How is this possible? We changed the reporting tool config file, yet &lt;code&gt;netsh&lt;/code&gt; still shows that port &lt;code&gt;8082&lt;/code&gt; is in use. Upon rechecking the reporting service logs, we confirmed that the application is indeed running on port &lt;code&gt;8083&lt;/code&gt;. 🤔&lt;/p&gt;
&lt;p&gt;It turns out that the URL with port &lt;code&gt;8082&lt;/code&gt; was reserved by SQL Reporting Services with an Access Control List (ACL) during installation. Changing the config file alone wasn’t enough. To see the list of URL reservations for HTTP services, use this command:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh http show urlacl
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; Reserved URL            : https://*:8082/
        User: NT SERVICE\SQLServerReportingServices
            Listen: Yes
            Delegate: No
            SDDL: D:(A;;GX;;;BU)(A;;GX;;;LS)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To free up port &lt;code&gt;8082&lt;/code&gt; for our front-end application, we needed to delete this obsolete HTTP reservation:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netsh http delete urlacl url=http://+:8082/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Output:&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Deleted Successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;To confirm that the port is free and available for use, run:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;netstat -noa | find &lt;span style=&#34;color:#a5d6ff&#34;&gt;&amp;#34;8082&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The expected output should be blank! 😉&lt;/p&gt;
&lt;p&gt;Finally, the port is free!&lt;/p&gt;
- https://bookofdaniel.in/posts/port-not-available/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>Kubernetes Architecture Explained: the Ship Analogy of KodeKloud</title>
        <link>https://bookofdaniel.in/posts/kubernetes-architecture-explained-the-ship-analogy-of-kodekloud/</link>
        <pubDate>Mon, 08 Jul 2024 08:28:44 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/kubernetes-architecture-explained-the-ship-analogy-of-kodekloud/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/kubernetes-architecture-explained-the-ship-analogy-of-kodekloud/ -&lt;p&gt;Welcome to our exploration of Kubernetes architecture! Kubernetes, often abbreviated as K8s, is a powerful tool designed to manage containerized applications in a scalable and automated fashion. This blog post aims to provide a high-level understanding of Kubernetes architecture using an analogy of ships, which simplifies the complex interplay between its components. Special thanks to KodeKloud for their insightful lecture, which inspired this overview.&lt;/p&gt;
&lt;h3 id=&#34;the-kubernetes-cluster-ships-at-sea&#34;&gt;The Kubernetes Cluster: Ships at Sea&lt;/h3&gt;
&lt;p&gt;At its core, a Kubernetes cluster comprises two types of nodes: worker nodes and master nodes. To understand their roles, let&amp;rsquo;s imagine a fleet of ships:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Worker Nodes (Cargo Ships)&lt;/strong&gt;: These ships carry the actual load—in Kubernetes, this translates to running your containerized applications.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Master Nodes (Control Ships)&lt;/strong&gt;: These ships oversee and manage the cargo ships, ensuring everything runs smoothly.&lt;/li&gt;
&lt;/ul&gt;
&lt;img title=&#34;Kubernetes Architecture Explained: the Ship Analogy of KodeKloud&#34; alt=&#34;Kubernetes Architecture Explained: the Ship Analogy of KodeKloud&#34; src=&#34;https://bookofdaniel.in/images/k8s-ship-analogy-kodekloud.webp&#34;&gt;
&lt;h3 id=&#34;master-nodes-the-control-ships&#34;&gt;Master Nodes: The Control Ships&lt;/h3&gt;
&lt;p&gt;Master nodes are the brain of the Kubernetes cluster, managing the state and operations of the entire system. They contain several key components, collectively known as the control plane:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;etcd&lt;/strong&gt;: A highly available key-value store that keeps all cluster data. Think of it as the central database that logs the details of every ship and container.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kube Scheduler&lt;/strong&gt;: Similar to cranes that load containers onto ships, the Kube Scheduler assigns containers to nodes based on resource requirements, node capacity, and various constraints like node affinity and tolerations.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Controllers&lt;/strong&gt;: These are specialized offices on the control ships handling specific tasks:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Node Controller&lt;/strong&gt;: Manages the state of nodes, ensuring they are operational and adding new ones to the cluster as needed.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Replication Controller&lt;/strong&gt;: Ensures the desired number of container replicas are running at all times.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kube API Server&lt;/strong&gt;: The central management component that orchestrates all operations within the cluster. It exposes the Kubernetes API, allowing users and controllers to interact with the cluster, monitor its state, and make necessary changes.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;worker-nodes-the-cargo-ships&#34;&gt;Worker Nodes: The Cargo Ships&lt;/h3&gt;
&lt;p&gt;Worker nodes are where your applications run, managed by two key components:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kubelet&lt;/strong&gt;: The captain of the ship, responsible for communicating with the Kube API Server, receiving instructions, and managing containers on the node. The Kubelet also sends status reports back to the master nodes.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kube-proxy&lt;/strong&gt;: Ensures smooth communication between containers across different nodes by maintaining network rules on each node. This is essential for services to interact seamlessly, like a web server on one node communicating with a database server on another.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;container-runtime&#34;&gt;Container Runtime&lt;/h3&gt;
&lt;p&gt;All nodes, whether master or worker, require a container runtime engine to run containers. While Docker is a popular choice, Kubernetes also supports other runtimes like containerd and CRI-O. This runtime environment is crucial for deploying containerized applications and components.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Kubernetes architecture, with its intricate components and interactions, ensures efficient and scalable management of containerized applications. By likening it to a fleet of ships with dedicated roles and responsibilities, we can better understand the complex but elegant orchestration that Kubernetes provides.&lt;/p&gt;
&lt;p&gt;In upcoming posts, we will delve deeper into each component, exploring their configurations and roles in greater detail. Stay tuned as we continue to navigate the fascinating world of Kubernetes!&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;em&gt;Credit: This content is inspired by a lecture from KodeKloud.&lt;/em&gt;&lt;/p&gt;
- https://bookofdaniel.in/posts/kubernetes-architecture-explained-the-ship-analogy-of-kodekloud/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>The 5 Minute Death Journal Method</title>
        <link>https://bookofdaniel.in/posts/the-5-minute-death-journal-method/</link>
        <pubDate>Fri, 05 Apr 2024 10:16:30 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/the-5-minute-death-journal-method/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/the-5-minute-death-journal-method/ -&lt;p&gt;In the hustle and bustle of our daily lives, it&amp;rsquo;s easy to let moments slip by without much thought. The idea of journaling, while appealing in theory, often feels daunting in practice. After a long day, the last thing many of us want to do is reflect on our experiences and plan for the next. But what if I told you there&amp;rsquo;s a way to reap the benefits of journaling in just five minutes a day? Enter the 5-Minute Death Journal.&lt;/p&gt;
&lt;p&gt;Inspired by positive psychology research, this journaling method is designed to help you remember more, increase productivity, and foster happiness—all in just five minutes. It may sound too good to be true, but after incorporating it into my daily routine for the past month, I can attest to its transformative power.&lt;/p&gt;
&lt;p&gt;The 5-Minute Death Journal method was introduced to me by &lt;a href=&#34;https://www.youtube.com/@spoonfedstudy&#34;&gt;SpoonFedStudy&lt;/a&gt;, whose insightful YouTube video served as the catalyst for my journey. In his video titled &amp;ldquo;&lt;a href=&#34;https://youtu.be/w_gohJgxBlU&#34;&gt;the most important book in your entire life&lt;/a&gt;,&amp;rdquo; eloquently outlines the principles and exercises of the journal, offering practical tips for implementation.&lt;/p&gt;
&lt;p&gt;&lt;img title=&#34;The 5-Minute Death Journal Method&#34; alt=&#34;The 5-Minute Death Journal Method&#34; src=&#34;https://bookofdaniel.in/images/The 5-Minute Death Journal Method.webp&#34;&gt; &lt;br&gt;&lt;/p&gt;
&lt;p&gt;The journal consists of five simple exercises, each taking just one minute to complete. The first exercise, &amp;ldquo;&lt;strong&gt;The Deathbed Time Machine Tour of Today&lt;/strong&gt;,&amp;rdquo; prompts you to imagine yourself at the end of your life, looking back on the day. What are the top three moments you want your older self to cherish? This exercise encourages you to find meaning in the seemingly mundane and appreciate the small joys that make life rich.&lt;/p&gt;
&lt;p&gt;Next, &amp;ldquo;&lt;strong&gt;The Wise Old Man Who Teaches You Stuff&lt;/strong&gt;&amp;rdquo; challenges you to identify the lessons learned throughout the day. Whether it&amp;rsquo;s a profound realization or a subtle insight, there&amp;rsquo;s always something to be gained from each experience.&lt;/p&gt;
&lt;p&gt;Then comes &amp;ldquo;&lt;strong&gt;The Evil Serial Kidnapper&lt;/strong&gt;,&amp;rdquo; a whimsical yet effective exercise in productivity. Imagine a villain holding your beloved hamster hostage, demanding three concrete tasks for the following day. By setting clear goals, you not only prioritize your time but also gain clarity and focus.&lt;/p&gt;
&lt;p&gt;The fourth exercise, &amp;ldquo;&lt;strong&gt;The Karmic Well of Universal Awesomeness&lt;/strong&gt;,&amp;rdquo; prompts you to reflect on the positive contributions you&amp;rsquo;ve made to the world. From small acts of kindness to meaningful gestures, every action has the power to make a difference.&lt;/p&gt;
&lt;p&gt;Finally, &amp;ldquo;&lt;strong&gt;The Internal Springs of Never-Ending Gratitude&lt;/strong&gt;&amp;rdquo; invites you to express gratitude for the day&amp;rsquo;s blessings. Research has shown that cultivating gratitude leads to increased happiness and overall well-being, making this exercise a crucial component of the journaling process.&lt;/p&gt;
&lt;p&gt;By dedicating just five minutes to these exercises each day, you&amp;rsquo;ll develop a deeper appreciation for life&amp;rsquo;s moments and cultivate a mindset of gratitude and purpose. Each day becomes a cherished friend, worthy of celebration and remembrance.&lt;/p&gt;
&lt;p&gt;So why wait? Start your own journey with the 5-Minute Death Journal today, inspired by &lt;a href=&#34;https://www.youtube.com/@spoonfedstudy&#34;&gt;SpoonFedStudy&lt;/a&gt; insightful guidance. After all, every moment is precious—let&amp;rsquo;s make the most of them together.&lt;/p&gt;
- https://bookofdaniel.in/posts/the-5-minute-death-journal-method/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>A Daily Plan for Success</title>
        <link>https://bookofdaniel.in/posts/a-daily-plan-for-success/</link>
        <pubDate>Wed, 03 Apr 2024 14:44:37 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/a-daily-plan-for-success/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/a-daily-plan-for-success/ -&lt;p&gt;Are you struggling to stay focused and accomplish your goals amidst a sea of distractions? Do you find yourself procrastinating more often than not? If so, you&amp;rsquo;re not alone. Many of us face similar challenges in our daily lives, especially when working from home or in a busy environment. But fear not, because today I want to share with you a simple yet powerful daily plan inspired by insights from Cal Newport&amp;rsquo;s book &amp;ldquo;Deep Work.&amp;rdquo;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Understanding Deep Work&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Before we dive into the daily plan, let&amp;rsquo;s understand the concept of deep work. Deep work refers to focused, uninterrupted work that demands your full cognitive abilities. It&amp;rsquo;s the kind of work that moves the needle and brings you closer to your goals. Newport emphasizes the importance of scheduling dedicated time for deep work every day, ideally around 4 hours, to achieve meaningful progress. &lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;The Four Key Stages of the Daily Plan&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Deep Work:&lt;/strong&gt; This is the cornerstone of productivity. Set aside focused blocks of time for tasks that require your utmost concentration and creativity. Define clear goals for each session to maximize productivity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Shallow Work:&lt;/strong&gt; These are tasks that are necessary but don&amp;rsquo;t require deep concentration, such as replying to emails or attending routine meetings. Streamline or batch these tasks to free up more time for deep work.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Personal Goals:&lt;/strong&gt; Allocate time each day for activities that enhance your well-being and skill development. Whether it&amp;rsquo;s exercising, learning a new language, or pursuing a hobby, investing in personal goals boosts morale and productivity.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Relaxation Time:&lt;/strong&gt; Don&amp;rsquo;t overlook the importance of rest and relaxation. Engage in activities that recharge you, such as spending time with loved ones, reading a book, or engaging in hobbies. A refreshed mind is more productive and creative. &lt;br&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Benefits of a Structured Daily Plan&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Implementing a structured daily plan based on these four stages offers several benefits:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Improved focus and productivity&lt;/li&gt;
&lt;li&gt;Reduced procrastination and distractions&lt;/li&gt;
&lt;li&gt;Enhanced work-life balance&lt;/li&gt;
&lt;li&gt;Greater satisfaction and progress towards goals &lt;br&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Final Thoughts&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As I&amp;rsquo;ve embarked on this journey of implementing a daily plan inspired by &amp;ldquo;Deep Work,&amp;rdquo; I&amp;rsquo;ve seen significant improvements in my focus and productivity. While it&amp;rsquo;s a work in progress, the results are promising.&lt;/p&gt;
&lt;p&gt;If you&amp;rsquo;re struggling to find your rhythm or boost productivity, consider adopting a similar daily plan tailored to your needs. Remember, consistency and dedication are key to success.&lt;/p&gt;
&lt;p&gt;I highly recommend delving into Cal Newport&amp;rsquo;s book for more insights and strategies on focused success in a distracted world.&lt;/p&gt;
&lt;p&gt;Thank you for reading, and I hope this simple yet effective daily plan helps you unlock your full potential and achieve your goals. If you found this post valuable, don&amp;rsquo;t forget to subscribe for more content. Here&amp;rsquo;s to a focused and successful journey ahead!  &lt;br&gt;
Cheers! 🎉&lt;/p&gt;
- https://bookofdaniel.in/posts/a-daily-plan-for-success/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>How Programmers Can Become 10X More Effective by Applying the &#34;7 Habits of Highly Effective People&#34;</title>
        <link>https://bookofdaniel.in/posts/how-programmers-can-become-10x-more-effective/</link>
        <pubDate>Sun, 03 Mar 2024 22:24:59 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/how-programmers-can-become-10x-more-effective/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/how-programmers-can-become-10x-more-effective/ -&lt;p&gt;In a world where technology is ever-evolving, programmers are constantly seeking ways to enhance their skills and productivity. A treasure trove of wisdom that is often overlooked in the tech community is Stephen Covey&amp;rsquo;s iconic book, &amp;ldquo;7 Habits of Highly Effective People.&amp;rdquo; Sahil, a YouTuber, sheds light on how this book can be a game-changer for programmers aspiring to amplify their effectiveness tenfold.&lt;/p&gt;
&lt;h4 id=&#34;1-the-essence-of-proactivity-in-programming&#34;&gt;1. The Essence of Proactivity in Programming&lt;/h4&gt;
&lt;p&gt;Covey distinguishes between reactive and proactive individuals, drawing a parallel with programmers. Reactive programmers might wait for a life-changing tutorial or a list of interview questions to boost their career. In contrast, proactive programmers take ownership of their growth. They invest time in understanding the fundamentals, practicing coding, and building projects. This mindset shift from dependency to self-reliance is crucial for any programmer aiming for excellence.&lt;/p&gt;
&lt;h4 id=&#34;2-start-with-the-end-in-mind&#34;&gt;2. Start with the End in Mind&lt;/h4&gt;
&lt;p&gt;Strategizing is vital, and Covey&amp;rsquo;s advice to &amp;ldquo;begin with the end in mind&amp;rdquo; resonates well with software development. Before embarking on a project, understanding the desired outcome and the project&amp;rsquo;s requirements can save countless hours. Planning not only streamlines the development process but also ensures that the project&amp;rsquo;s goals are clear and achievable.&lt;/p&gt;
&lt;h4 id=&#34;3-prioritization-with-the-eisenhower-matrix&#34;&gt;3. Prioritization with the Eisenhower Matrix&lt;/h4&gt;
&lt;p&gt;The Eisenhower Matrix, as recommended by Covey, is a powerful tool for managing tasks based on urgency and importance. Programmers can use this matrix to navigate the often overwhelming demands of software development, focusing on tasks that are crucial for long-term success. This method encourages developers to allocate time for learning and improving, which might otherwise be neglected amid pressing deadlines.&lt;/p&gt;
&lt;h4 id=&#34;4-cultivating-an-abundance-mindset&#34;&gt;4. Cultivating an Abundance Mindset&lt;/h4&gt;
&lt;p&gt;Covey&amp;rsquo;s emphasis on developing an abundance mentality is particularly relevant in the competitive field of software engineering. Recognizing that success is not a zero-sum game enables programmers to collaborate more effectively and create win-win situations. This mindset fosters a healthy work environment and encourages collective success.&lt;/p&gt;
&lt;h4 id=&#34;5-empathetic-communication&#34;&gt;5. Empathetic Communication&lt;/h4&gt;
&lt;p&gt;Effective communication is paramount in programming. Covey&amp;rsquo;s principle of seeking first to understand then to be understood applies to code readability and user experience. Programmers who prioritize empathy in their coding and design processes contribute to more intuitive and user-friendly applications.&lt;/p&gt;
&lt;h4 id=&#34;6-leveraging-synergy&#34;&gt;6. Leveraging Synergy&lt;/h4&gt;
&lt;p&gt;The concept of synergy, where the whole is greater than the sum of its parts, is critical in software development. By valuing team members&amp;rsquo; diverse strengths and working collaboratively, programmers can achieve remarkable results that surpass what could be accomplished individually.&lt;/p&gt;
&lt;h4 id=&#34;7-continuous-learning-sharpening-the-saw&#34;&gt;7. Continuous Learning: Sharpening the Saw&lt;/h4&gt;
&lt;p&gt;Lastly, Covey&amp;rsquo;s habit of &amp;ldquo;sharpening the saw&amp;rdquo; underscores the importance of continuous learning in programming. With the rapid pace of technological advancements, staying updated and acquiring new skills is essential for a programmer&amp;rsquo;s growth and relevance in the field.&lt;/p&gt;
&lt;h4 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h4&gt;
&lt;p&gt;Sahil&amp;rsquo;s insightful application of &amp;ldquo;7 Habits of Highly Effective People&amp;rdquo; to programming is a testament to the book&amp;rsquo;s universal relevance. By embracing these habits, programmers can enhance their effectiveness, foster meaningful collaborations, and navigate their careers with confidence and agility. For those looking to delve deeper into building consistent programming habits, Sahil also recommends &amp;ldquo;Atomic Habits&amp;rdquo; by James Clear, further enriching the toolkit for personal and professional development.&lt;/p&gt;
&lt;p&gt;Watch Sahil&amp;rsquo;s &lt;a href=&#34;https://youtu.be/aXiBFDDtPNM&#34;&gt;video&lt;/a&gt; to explore these concepts in detail and join him in the journey toward becoming a 10X programmer.&lt;/p&gt;
- https://bookofdaniel.in/posts/how-programmers-can-become-10x-more-effective/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>Issues Faced During WSFC Configuration for SQL Server AlwaysOn Setup</title>
        <link>https://bookofdaniel.in/posts/issue-faced-on-wsfc-configuration-for-sql-server-alwayson-setup/</link>
        <pubDate>Fri, 01 Mar 2024 22:58:46 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/issue-faced-on-wsfc-configuration-for-sql-server-alwayson-setup/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/issue-faced-on-wsfc-configuration-for-sql-server-alwayson-setup/ -&lt;p&gt;I&amp;rsquo;ve had the privilege of navigating through a wide array of technical landscapes. Yet, the recent endeavor of configuring a Windows Server Failover Cluster (WSFC) for SQL Server AlwaysOn presented a learning curve that was both steep and enriching. In this piece, I hope to share my experiences, the challenges encountered, and the lessons learned, with a spirit of humility and the intention of contributing to our collective knowledge base.&lt;/p&gt;
&lt;h2 id=&#34;encountering-the-first-major-challenge-adding-a-cloud-witness&#34;&gt;Encountering the First Major Challenge: Adding a Cloud Witness&lt;/h2&gt;
&lt;p&gt;The journey began with an attempt to integrate a cloud witness into our WSFC configuration, a task that quickly unfolded into a series of troubleshooting steps. The primary node&amp;rsquo;s refusal to fail over automatically, sticking instead in a &amp;ldquo;resolving&amp;rdquo; state, was our first major roadblock. The error message pointed towards an authentication and network recognition issue:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&amp;ldquo;An error was encountered while modifying the quorum settings. ERROR CODE: 0x80131500; NATIVE ERROR CODE: 1. WinRM cannot process the request&amp;hellip; Cannot find the computer proddbcluster.test.com.&amp;rdquo;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;navigating-through-the-storm&#34;&gt;Navigating Through the Storm&lt;/h3&gt;
&lt;p&gt;The resolution required a combination of technical know-how and a willingness to delve deep into the problem. Here&amp;rsquo;s how we approached it:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Step-by-Step Cloud Witness Configuration&lt;/strong&gt;: I leaned on a comprehensive guide to configure a cloud witness via PowerShell, a testament to the importance of following detailed instructions meticulously &lt;a href=&#34;https://www.jorgebernhardt.com/how-to-configure-a-cloud-witness-for-a-failover-cluster/&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Ensuring Secure Communications&lt;/strong&gt;: Verifying SSL TLS 1.2 implementation was crucial, highlighting the necessity of adhering to secure communication protocols &lt;a href=&#34;https://www.reddit.com/r/AZURE/comments/vtrl7x/comment/ifth3k4/?utm_source=share&amp;amp;utm_medium=web3x&amp;amp;utm_name=web3xcss&amp;amp;utm_term=1&amp;amp;utm_content=share_button&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Centralizing Control from the Owner Node&lt;/strong&gt;: Initiating configuration changes from the owner node underscored the importance of a centralized command approach in managing cluster configurations effectively.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Clearing the Slate&lt;/strong&gt;: Prior to setting up anew, I used PowerShell scripts to clear any existing cloud witness configurations, ensuring we started from a clean slate &lt;a href=&#34;https://www.reddit.com/r/AZURE/comments/vtrl7x/comment/jcfrpch/?utm_source=share&amp;amp;utm_medium=web3x&amp;amp;utm_name=web3xcss&amp;amp;utm_term=1&amp;amp;utm_content=share_button&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;WinRM Configuration Check&lt;/strong&gt;: The &lt;code&gt;winrm quickconfig&lt;/code&gt; command was a crucial step in confirming the operational status of Windows Remote Management across all nodes, a critical component for remote management &lt;a href=&#34;https://stackoverflow.com/questions/39917027/winrm-cannot-complete-the-operation-verify-that-the-specified-computer-name-is&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing Node-to-Storage Communication&lt;/strong&gt;: It was essential to confirm that there were no communication barriers between the nodes and the cloud witness storage account, foundational for the health of the cluster.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Utilizing Advanced Options for Cloud Witness Addition&lt;/strong&gt;: During the cloud witness addition, selecting advanced options and ensuring all nodes were included was a critical step for a comprehensive setup &lt;a href=&#34;https://blog.workinghardinit.work/2016/08/03/a-first-look-at-cloud-witness/&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Firewall Configuration Adjustments&lt;/strong&gt;: Adjusting the firewall settings to facilitate WinRM communication and ensuring cloud witness storage accessibility from all networks were the breakthrough moments in this journey &lt;a href=&#34;https://stackoverflow.com/a/60063137&#34;&gt;🔗&lt;/a&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;the-challenge-of-failover-resolution&#34;&gt;The Challenge of Failover Resolution&lt;/h2&gt;
&lt;p&gt;Another significant challenge was the primary node&amp;rsquo;s failure to automatically fail over to the secondary node during testing. This was an unexpected issue that required further investigation and adjustment.&lt;/p&gt;
&lt;h3 id=&#34;finding-a-path-forward&#34;&gt;Finding a Path Forward&lt;/h3&gt;
&lt;p&gt;The solution involved adjusting the Maximum Failover Period within the SQL Server configurations, a reminder of the importance of reviewing and fine-tuning these settings to accommodate our testing needs &lt;a href=&#34;https://learn.microsoft.com/en-us/troubleshoot/sql/database-engine/availability-groups/troubleshooting-automatic-failover-problems#case-1-maximum-failures-in-the-specified-period-value-is-exhausted&#34;&gt;🔗&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;embracing-humility-and-the-joy-of-learning&#34;&gt;Embracing Humility and the Joy of Learning&lt;/h2&gt;
&lt;p&gt;This experience has been a humbling reminder that no matter the length of time one spends in the field, there&amp;rsquo;s always more to learn. The challenges faced and the solutions found have reinforced a few core principles:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Precision Matters&lt;/strong&gt;: The importance of attention to detail in every step of the configuration process cannot be overstated.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Persistence Pays Off&lt;/strong&gt;: Facing down errors and persisting through troubleshooting is part of the journey. Each challenge is an opportunity to learn.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;The Value of Community&lt;/strong&gt;: The guidance and solutions shared by the broader community have been invaluable. It&amp;rsquo;s a reminder of the strength found in collective knowledge.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;final-thoughts&#34;&gt;Final Thoughts&lt;/h2&gt;
&lt;p&gt;The process of configuring WSFC for SQL Server AlwaysOn is a complex one, filled with potential pitfalls but also opportunities for growth and learning. My hope is that by sharing my journey, I can help others navigate similar challenges more smoothly. In the ever-evolving field of cloud and database architecture, each new project is a chance to expand our horizons and deepen our understanding.&lt;/p&gt;
- https://bookofdaniel.in/posts/issue-faced-on-wsfc-configuration-for-sql-server-alwayson-setup/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>The Batchology Handbook: Mastering the Art of Batch Scripting in Windows</title>
        <link>https://bookofdaniel.in/posts/the-batchology-handbook/</link>
        <pubDate>Wed, 17 Jan 2024 22:45:09 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/the-batchology-handbook/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/the-batchology-handbook/ -&lt;p&gt;Hello there! If you&amp;rsquo;ve ever wondered how to make your computer tasks faster and more efficient, you&amp;rsquo;re in the right place. This blog post is all about Batch scripting - a simple yet powerful way to automate tasks in Windows.&lt;/p&gt;
&lt;p&gt;Whether you&amp;rsquo;re new to programming or have some experience, &amp;ldquo;The Batchology Handbook&amp;rdquo; is designed to be easy to follow and understand. We&amp;rsquo;ll start with the basics, like setting up your workspace, and gradually move into more exciting stuff, like automating file management and using cool commands you might not know about.&lt;/p&gt;
&lt;p&gt;Batch scripting might sound a bit technical, but I promise to keep things light and straightforward. You&amp;rsquo;ll find practical examples that you can try out yourself, and I&amp;rsquo;ll explain everything step by step. By the end of this guide, you&amp;rsquo;ll be amazed at how much you can do with just a few simple commands.&lt;/p&gt;
&lt;p&gt;So, let&amp;rsquo;s get started and explore the world of Batch scripting together!&lt;/p&gt;
&lt;h1 id=&#34;1-introduction&#34;&gt;1. Introduction&lt;/h1&gt;
&lt;p&gt;Batch programming, also known as batch scripting, is a method of automating repetitive tasks in the Windows operating system. This is achieved through the creation of a batch file, a text file containing a series of commands to be executed by the command-line interpreter. Batch files are identified by their &lt;code&gt;.bat&lt;/code&gt; or &lt;code&gt;.cmd&lt;/code&gt; extension.&lt;/p&gt;
&lt;h3 id=&#34;purpose&#34;&gt;Purpose&lt;/h3&gt;
&lt;p&gt;The primary purpose of batch programming is to simplify the execution of multiple commands. It&amp;rsquo;s a powerful tool for system administrators, developers, and power users to automate routine tasks like file management, software installation, and system configuration.&lt;/p&gt;
&lt;h3 id=&#34;advantages&#34;&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Efficiency: Automates repetitive tasks, saving time and effort.&lt;/li&gt;
&lt;li&gt;Ease of Use: Requires no special programming skills, making it accessible for beginners.&lt;/li&gt;
&lt;li&gt;Flexibility: Can be combined with other scripts and programs for more complex operations.&lt;/li&gt;
&lt;li&gt;Resource-Friendly: Consumes minimal system resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;basic-components&#34;&gt;Basic Components&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Command Prompt: The environment where batch files are executed.&lt;/li&gt;
&lt;li&gt;Commands: Instructions executed sequentially in a batch file.&lt;/li&gt;
&lt;li&gt;Scripting Elements: Include loops, conditional statements, and variables.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;2-requirements&#34;&gt;2. Requirements&lt;/h1&gt;
&lt;p&gt;Batch programming doesn&amp;rsquo;t require any additional software installations on Windows operating systems as it utilizes the built-in Command Prompt. However, to create and edit batch files efficiently, the following are recommended:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows OS&lt;/strong&gt;: Any modern version (Windows 7, 8, 10, or 11).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Text Editor&lt;/strong&gt;: Notepad (built-in), Notepad++, or any other preferred text editor, Recommended: Visual Studio Code.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;configuring-the-command-prompt&#34;&gt;Configuring the Command Prompt&lt;/h3&gt;
&lt;p&gt;While not strictly necessary, configuring the Command Prompt for better usability can enhance the batch scripting experience:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Accessing Command Prompt&lt;/strong&gt;:
&lt;ul&gt;
&lt;li&gt;Press &lt;code&gt;Win + R&lt;/code&gt;, type &lt;code&gt;cmd&lt;/code&gt;, and press Enter.&lt;/li&gt;
&lt;li&gt;Alternatively, search for &amp;ldquo;Command Prompt&amp;rdquo; in the start menu.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Customization&lt;/strong&gt; (Optional):
&lt;ul&gt;
&lt;li&gt;Right-click the title bar of the Command Prompt window.&lt;/li&gt;
&lt;li&gt;Choose &amp;lsquo;Properties&amp;rsquo; to adjust settings like font size, layout, and color scheme for better visibility.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;creating-your-first-batch-file&#34;&gt;Creating Your First Batch File&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Open a Text Editor&lt;/strong&gt;: Right-click on your desktop or in any folder, select &amp;ldquo;New&amp;rdquo; &amp;gt; &amp;ldquo;Text Document.&amp;rdquo;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Enter a Simple Command&lt;/strong&gt;: For example, type &lt;code&gt;echo Hello, world!&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Save the File with a .bat Extension&lt;/strong&gt;: Click &amp;lsquo;File&amp;rsquo; &amp;gt; &amp;lsquo;Save As&amp;rsquo;, name your file (e.g., &lt;code&gt;HelloWorld.bat&lt;/code&gt;), and change the &amp;lsquo;Save as type&amp;rsquo; to &amp;lsquo;All Files&amp;rsquo;. Ensure the filename ends with &lt;code&gt;.bat&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Run Your Batch File&lt;/strong&gt;: Double-click the file to execute or run it from the Command Prompt.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;setting-file-associations-optional&#34;&gt;Setting File Associations (Optional)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;If double-clicking the &lt;code&gt;.bat&lt;/code&gt; file doesn&amp;rsquo;t execute it, ensure that &lt;code&gt;.bat&lt;/code&gt; files are associated with the Command Prompt:&lt;/li&gt;
&lt;li&gt;Right-click on a &lt;code&gt;.bat&lt;/code&gt; file and select &amp;lsquo;Open with&amp;rsquo; &amp;gt; &amp;lsquo;Choose another app.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Select &amp;lsquo;More apps&amp;rsquo;, scroll down, and choose &amp;lsquo;Look for another app on this PC.&amp;rsquo;&lt;/li&gt;
&lt;li&gt;Navigate to &lt;code&gt;C:\Windows\System32&lt;/code&gt; and select &lt;code&gt;cmd.exe&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;tips&#34;&gt;Tips&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;File Locations&lt;/strong&gt;: Store your batch files in a dedicated folder for easy management.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Testing&lt;/strong&gt;: Always test new scripts in a controlled environment to prevent unintended actions.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h1 id=&#34;3-basic-commands&#34;&gt;3. Basic Commands&lt;/h1&gt;
&lt;p&gt;Batch files execute a series of Command Prompt commands. Here, we&amp;rsquo;ll explore some fundamental commands that form the building blocks of batch scripting.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;th&gt;Example&lt;/th&gt;
&lt;th&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Echo&lt;/td&gt;
&lt;td&gt;Displays messages or turns command echoing on/off.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;echo Hello, world!&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Displays &amp;ldquo;Hello, world!&amp;rdquo; in Command Prompt.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REM&lt;/td&gt;
&lt;td&gt;Adds comments in the script for readability.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;REM This is a comment&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Ignored during execution, used for notes.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SET&lt;/td&gt;
&lt;td&gt;Creates or changes environment variables.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SET name=John&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Sets the value of &lt;code&gt;name&lt;/code&gt; to &amp;ldquo;John.&amp;rdquo;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;GOTO&lt;/td&gt;
&lt;td&gt;Directs the script to another section.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;GOTO END&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Jumps to the label &lt;code&gt;:END&lt;/code&gt; in the script.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Labels&lt;/td&gt;
&lt;td&gt;Marks a section of the script.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;:END&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used with &lt;code&gt;GOTO&lt;/code&gt; to create script sections.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PAUSE&lt;/td&gt;
&lt;td&gt;Pauses the script, waiting for a key press.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PAUSE&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Used for testing or script pauses.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;EXIT&lt;/td&gt;
&lt;td&gt;Exits the Command Prompt or a script.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;EXIT&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Closes the Command Prompt window in a script.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;sample-batch-file&#34;&gt;Sample Batch File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; @&lt;span style=&#34;color:#ff7b72&#34;&gt;ECHO&lt;/span&gt; OFF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#8b949e;font-style:italic&#34;&gt;REM Sample batch script&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;name&lt;/span&gt;=John
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; Hello, &lt;span style=&#34;color:#79c0ff&#34;&gt;%name%&lt;/span&gt;!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;PAUSE&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;GOTO&lt;/span&gt; &lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;END&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; :&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;END&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; Script is ending...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;EXIT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This script introduces basic commands, including setting a variable, displaying messages, and controlling the script flow.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;4-advanced-scripting-techniques&#34;&gt;4. Advanced Scripting Techniques&lt;/h1&gt;
&lt;p&gt;After mastering basic commands, you can enhance your batch scripts with more sophisticated techniques. These advanced methods allow for greater flexibility and functionality in your scripts.&lt;/p&gt;
&lt;h3 id=&#34;using-variables&#34;&gt;Using Variables&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Dynamic Variable Assignment&lt;/strong&gt;:Variables can be set based on user input or other commands.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;SET /P username=Enter your username: &lt;/code&gt;This command prompts the user to enter a username, which is stored in the &lt;code&gt;username&lt;/code&gt; variable.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Manipulating Strings&lt;/strong&gt;: Batch scripts support basic string manipulation.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;SET fullname=%firstname% %lastname%&lt;/code&gt;
Concatenates two variables to create a full name.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;conditional-statements&#34;&gt;Conditional Statements&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;IF Command&lt;/strong&gt;: Used for making decisions in scripts.
&lt;ul&gt;
&lt;li&gt;Syntax: &lt;code&gt;IF [condition] [command]&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;IF %age% LEQ 18 echo You are a minor.&lt;/code&gt;
Checks if the value of &lt;code&gt;age&lt;/code&gt; is less than or equal to 18.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using ELSE&lt;/strong&gt;: To specify an alternative action if the IF condition is false.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;IF %number% EQU 10 (echo Number is 10) ELSE (echo Number is not 10)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;loops&#34;&gt;Loops&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;FOR Command&lt;/strong&gt;: Executes a command for each item in a set.
&lt;ul&gt;
&lt;li&gt;Syntax: &lt;code&gt;FOR %%parameter IN (set) DO command&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;FOR %%G IN (*.txt) DO echo %%G&lt;/code&gt;
This will echo the name of each &lt;code&gt;.txt&lt;/code&gt; file in the current directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;subroutines&#34;&gt;Subroutines&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;CALL Command&lt;/strong&gt;: Calls another batch file or a label within the same file.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;CALL :subroutine&lt;/code&gt;
Calls a label named &lt;code&gt;:subroutine&lt;/code&gt; within the script.&lt;/li&gt;
&lt;li&gt;Creating a Subroutine:
&lt;ul&gt;
&lt;li&gt;Example:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;subroutine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; This is a subroutine.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;GOTO&lt;/span&gt; :&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;error-handling&#34;&gt;Error Handling&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;ErrorLevel&lt;/strong&gt;: Used to check the status of the last executed command.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;IF %ERRORLEVEL% NEQ 0 echo Error occurred.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Using &lt;code&gt;EXIT /B&lt;/code&gt;&lt;/strong&gt;: Exits the script or subroutine without closing the Command Prompt.
&lt;ul&gt;
&lt;li&gt;Example: &lt;code&gt;EXIT /B 1&lt;/code&gt;
Exits the subroutine or script and sets the &lt;code&gt;ErrorLevel&lt;/code&gt; to 1.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;delay-execution&#34;&gt;Delay Execution&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;TIMEOUT Command&lt;/strong&gt;: Pauses the script for a specified number of seconds.&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;TIMEOUT /T 10&lt;/code&gt;
Pauses the script for 10 seconds.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sample-advanced-batch-file&#34;&gt;Sample Advanced Batch File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@&lt;span style=&#34;color:#ff7b72&#34;&gt;ECHO&lt;/span&gt; OFF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;SET&lt;/span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;/P&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;userinput&lt;/span&gt;=Enter a number: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;IF&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;%userinput%&lt;/span&gt; &lt;span style=&#34;color:#ff7b72;font-weight:bold&#34;&gt;EQU&lt;/span&gt; 10 (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; The number is 10.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;) &lt;span style=&#34;color:#ff7b72&#34;&gt;ELSE&lt;/span&gt; (
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; The number is not 10.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;FOR&lt;/span&gt; &lt;span style=&#34;color:#79c0ff&#34;&gt;%%&lt;/span&gt;G &lt;span style=&#34;color:#ff7b72&#34;&gt;IN&lt;/span&gt; (*.docx) &lt;span style=&#34;color:#ff7b72&#34;&gt;DO&lt;/span&gt; &lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; Found document: &lt;span style=&#34;color:#79c0ff&#34;&gt;%%&lt;/span&gt;G
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;CALL&lt;/span&gt; :&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;subroutine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;EXIT&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;:&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;subroutine&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;echo&lt;/span&gt; This is a subroutine.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff7b72&#34;&gt;GOTO&lt;/span&gt; :&lt;span style=&#34;color:#79c0ff;font-weight:bold&#34;&gt;EOF&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This script combines various advanced techniques, showcasing conditional logic, loops, subroutines, and user input.&lt;/p&gt;
&lt;h3 id=&#34;conclusion&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Advanced scripting techniques in batch programming significantly enhance the capabilities of your scripts, allowing you to automate more complex tasks and handle various scenarios efficiently.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;4-file-operations&#34;&gt;4. File Operations&lt;/h1&gt;
&lt;p&gt;File operations are crucial in batch programming for managing files and directories. This section covers commands to perform various file operations such as creating, copying, moving, and deleting files and directories.&lt;/p&gt;
&lt;h3 id=&#34;creating-files-and-directories&#34;&gt;Creating Files and Directories&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Creating a New File:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;type nul &amp;gt; filename.ext&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;type nul &amp;gt; example.txt&lt;/code&gt;
Creates an empty file named &lt;code&gt;example.txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Creating a Directory:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;mkdir directoryname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;mkdir MyFolder&lt;/code&gt;
Creates a new directory named &lt;code&gt;MyFolder&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;copying-files-and-directories&#34;&gt;Copying Files and Directories&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Copying a File:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;copy source destination&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;copy example.txt D:\Backup\example.txt&lt;/code&gt;
Copies &lt;code&gt;example.txt&lt;/code&gt; to the &lt;code&gt;D:\Backup&lt;/code&gt; directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Copying a Directory:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;xcopy source destination /E /H /C /I&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;xcopy MyFolder D:\Backup\MyFolder /E /H /C /I&lt;/code&gt;
Recursively copies &lt;code&gt;MyFolder&lt;/code&gt; to &lt;code&gt;D:\Backup&lt;/code&gt;, including hidden files and subdirectories.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;moving-and-renaming-files-and-directories&#34;&gt;Moving and Renaming Files and Directories&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Moving a File:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;move source destination&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;move example.txt D:\Archive&lt;/code&gt;
Moves &lt;code&gt;example.txt&lt;/code&gt; to &lt;code&gt;D:\Archive&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Renaming a File or Directory:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;ren oldname newname&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;ren example.txt new_example.txt&lt;/code&gt;
Renames &lt;code&gt;example.txt&lt;/code&gt; to &lt;code&gt;new_example.txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;deleting-files-and-directories&#34;&gt;Deleting Files and Directories&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Deleting a File:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;del filename&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;del example.txt&lt;/code&gt;
Deletes &lt;code&gt;example.txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Deleting a Directory:
- Command: &lt;code&gt;rmdir /S /Q directoryname&lt;/code&gt;
- Example: &lt;code&gt;rmdir /S /Q MyFolder&lt;/code&gt;
Deletes &lt;code&gt;MyFolder&lt;/code&gt; and all of its contents.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;working-with-file-attributes&#34;&gt;Working with File Attributes&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Changing File Attributes:
&lt;ul&gt;
&lt;li&gt;Command: &lt;code&gt;attrib [+|-][R|A|S|H] filename&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Example: &lt;code&gt;attrib +R example.txt&lt;/code&gt;
Sets the read-only attribute to &lt;code&gt;example.txt&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sample-script-for-file-operations&#34;&gt;Sample Script for File Operations&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#c9d1d9;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  @&lt;span style=&#34;color:#ff7b72&#34;&gt;ECHO&lt;/span&gt; OFF
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff7b72&#34;&gt;mkdir&lt;/span&gt; MyDocuments
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff7b72&#34;&gt;type&lt;/span&gt; nul &amp;gt; MyDocuments\doc1.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  xcopy MyDocuments D:\Backup\MyDocuments /E /H /C /I
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff7b72&#34;&gt;move&lt;/span&gt; MyDocuments\doc1.txt MyDocuments\document.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff7b72&#34;&gt;del&lt;/span&gt; MyDocuments\doc1.txt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff7b72&#34;&gt;rmdir&lt;/span&gt; /S /Q MyDocuments
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This script demonstrates creating a directory and a file, copying the directory, renaming a file, deleting the file, and finally deleting the directory.&lt;/p&gt;
&lt;h3 id=&#34;conclusion-1&#34;&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Understanding file operations in batch programming is essential for effective script writing, especially when handling bulk file management tasks. These operations lay the foundation for automating routine file management tasks in a Windows environment.&lt;/p&gt;
&lt;hr&gt;
&lt;h1 id=&#34;5-cool-commands&#34;&gt;5. Cool Commands&lt;/h1&gt;
&lt;p&gt;In addition to basic file operations and scripting techniques, batch programming offers a plethora of &amp;ldquo;cool commands&amp;rdquo; that can be used for a wide range of purposes, from system administration to advanced file manipulation. Let&amp;rsquo;s explore some of these commands and their functionalities.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Command&lt;/th&gt;
&lt;th&gt;Purpose&lt;/th&gt;
&lt;th&gt;Usage&lt;/th&gt;
&lt;th&gt;Reference Link&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;FC&lt;/td&gt;
&lt;td&gt;Compares two files and displays the differences.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FC file1 file2&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/fc&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FORFILES&lt;/td&gt;
&lt;td&gt;Executes a command on each file in a set of files.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;FORFILES /P directory /M searchmask /C cmd&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/forfiles&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;HELP&lt;/td&gt;
&lt;td&gt;Provides help information for batch commands.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;HELP command&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/help&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;MSG&lt;/td&gt;
&lt;td&gt;Sends a message to a user or session.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;MSG [username]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/msg&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PROMPT&lt;/td&gt;
&lt;td&gt;Changes the command prompt.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;PROMPT [text]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/prompt&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;QUERY&lt;/td&gt;
&lt;td&gt;Displays the status of a specified service/session.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;QUERY session&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/query&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;REG&lt;/td&gt;
&lt;td&gt;Manages registry keys and values.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;REG QUERY key&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/windows-server/administration/windows-commands/reg-query&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RUNAS&lt;/td&gt;
&lt;td&gt;Executes a program under a different user account.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;RUNAS /USER:user program&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc771525(v=ws.11)&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SC&lt;/td&gt;
&lt;td&gt;Manages Windows services.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SC command service_name&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc754599(v=ws.11)&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SCHTASKS&lt;/td&gt;
&lt;td&gt;Schedules commands/programs to run periodically.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SCHTASKS /CREATE /SC schedule /TN task /TR run&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://learn.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/cc725744(v=ws.11)&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHORTCUT&lt;/td&gt;
&lt;td&gt;Creates a Windows shortcut.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SHORTCUT /F:filename /A:C /T:targetpath&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/shortcut.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SHUTDOWN&lt;/td&gt;
&lt;td&gt;Shuts down or restarts a computer.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SHUTDOWN /s /t time&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/shutdown.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SUBST&lt;/td&gt;
&lt;td&gt;Associates a path with a drive letter.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SUBST drive: path&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/subst.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SYSTEMINFO&lt;/td&gt;
&lt;td&gt;Displays detailed system information.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;SYSTEMINFO&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/systeminfo.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TAKEOWN&lt;/td&gt;
&lt;td&gt;Takes ownership of a file or folder.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TAKEOWN /F file_or_folder&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/takeown.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TASKKILL&lt;/td&gt;
&lt;td&gt;Ends tasks or processes.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TASKKILL /IM imagename&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/taskkill.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TASKLIST&lt;/td&gt;
&lt;td&gt;Displays a list of currently running tasks.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TASKLIST&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/tasklist.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TELNET&lt;/td&gt;
&lt;td&gt;Communicates using the Telnet protocol.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TELNET [host] [port]&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/telnet.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TREE&lt;/td&gt;
&lt;td&gt;Graphically displays folder structure.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TREE path&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/tree.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TSDISCON&lt;/td&gt;
&lt;td&gt;Disconnects a Terminal Services session.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;TSDISCON sessionid&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/tsdiscon.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WHERE&lt;/td&gt;
&lt;td&gt;Locates and displays file paths matching a pattern.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WHERE pattern&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/where.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;WHOAMI&lt;/td&gt;
&lt;td&gt;Displays user, group, and privilege information.&lt;/td&gt;
&lt;td&gt;&lt;code&gt;WHOAMI&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://ss64.com/nt/whoami.html&#34;&gt;🔗&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;hr&gt;
&lt;h1 id=&#34;references&#34;&gt;References&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ss64.com/nt/syntax.html&#34;&gt;Windows CMD Command Syntax - SS64.com&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ss64.com/nt/&#34;&gt;An A-Z Index of Windows CMD commands - SS64.com&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
- https://bookofdaniel.in/posts/the-batchology-handbook/ - 2024</description>
        </item>
    
    
    
        <item>
        <title>The Unstoppable Framework: A Step-by-Step Guide to Achieving Your Goals</title>
        <link>https://bookofdaniel.in/posts/the-unstoppable-framework/</link>
        <pubDate>Thu, 11 Jan 2024 08:04:16 +0530</pubDate>
        
        <guid>https://bookofdaniel.in/posts/the-unstoppable-framework/</guid>
        <description>Book Of Daniel https://bookofdaniel.in/posts/the-unstoppable-framework/ -&lt;p&gt;We all aspire to be better, stronger, smarter, and healthier, yet many struggle to stick with their goals. In this post, we&amp;rsquo;ll explore a practical framework that addresses this common issue, allowing you to effortlessly surpass your goals. This system has been successfully used to develop the discipline needed to hold a 15-minute plank every day. Join me on this journey, and let&amp;rsquo;s unlock your raw power together.&lt;/p&gt;
&lt;h2 id=&#34;step-1-action-oriented-goals&#34;&gt;Step 1: Action-Oriented Goals&lt;/h2&gt;
&lt;p&gt;Instead of setting vague and impractical goals, focus on specific actions within a defined time frame. For instance, rather than aiming to lose 20 pounds, set a goal to complete 10,000 push-ups by the end of the year. Break down the goal into actionable steps, visualize each step, and establish a non-negotiable daily minimum to make progress.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Goal: Learn computer programming
Action: Code 25 functional programs&lt;/li&gt;
&lt;li&gt;Goal: Get into a relationship
Action: Have 100 interesting conversations with strangers&lt;/li&gt;
&lt;li&gt;Goal: Become a famous YouTuber
Action: Make 100 videos packed with value&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-2-minimize-friction&#34;&gt;Step 2: Minimize Friction&lt;/h2&gt;
&lt;p&gt;Identify and eliminate real and imagined friction in your journey. If the gym is too far away, make the ground you stand on your gym. Remove unnecessary obstacles, such as the need for a personal trainer. Break down actions into 5-minute chunks, making them easily achievable and minimally taxing on your resources.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Gym too far away? Your ground is the gym.&lt;/li&gt;
&lt;li&gt;No personal trainer? Do 10 burpees without one.&lt;/li&gt;
&lt;li&gt;Intimidated by learning Spanish? Start with one word a day.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-3-anchor-and-toll&#34;&gt;Step 3: Anchor and Toll&lt;/h2&gt;
&lt;p&gt;Anchor your new habits to existing routines in your daily life. Create a toll system where you attach a cost to certain activities, making them conditional on completing specific tasks. For example, learn one Spanish word before accessing the shower. Get creative with tolls to reinforce positive behaviors.&lt;/p&gt;
&lt;p&gt;Examples:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Anchor: Listen to audiobooks while taking dumps.&lt;/li&gt;
&lt;li&gt;Toll: 10 push-ups before playing video games.&lt;/li&gt;
&lt;li&gt;Toll: Learn one Spanish word before taking a shower.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-4-pavlovs-dog-conditioning&#34;&gt;Step 4: Pavlov&amp;rsquo;s Dog Conditioning&lt;/h2&gt;
&lt;p&gt;Pair your daily actions with something incredibly enjoyable, creating a Pavlovian association. Follow the sacred rule: only engage in the enjoyable activity when performing the specified action. This conditions your brain to crave the task, making it enjoyable and effortless.&lt;/p&gt;
&lt;p&gt;Example:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Sacred rule: Play a phone game only while holding a plank.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;step-5-the-feather-approach&#34;&gt;Step 5: The Feather Approach&lt;/h2&gt;
&lt;p&gt;Gradually introduce small increments to your routine, making them feel almost negligible. If you started with a 20-second plank, increase to 25 seconds. This feather approach ensures a smooth transition, preventing burnout. Repeat this process until the combined weight of your actions becomes second nature.&lt;/p&gt;
&lt;h2 id=&#34;step-6-build-the-skyscraper&#34;&gt;Step 6: Build the Skyscraper&lt;/h2&gt;
&lt;p&gt;Continuously add new Lego bricks and feathers to your routine, creating a skyscraper of positive habits. With a solid anchor or toll, these habits will seamlessly integrate into your daily life. The compounding effect of these habits will lead to exponential growth and make you unstoppable in pursuing larger projects and goals.&lt;/p&gt;
&lt;h2 id=&#34;conclusion&#34;&gt;Conclusion:&lt;/h2&gt;
&lt;p&gt;By following this step-by-step framework, you can transform your life and become unstoppable in achieving your goals. &lt;strong&gt;The key is consistency, creativity, and a commitment&lt;/strong&gt; to building a skyscraper of positive habits that elevate you to new heights. Start today, and watch as the compounding power of these habits propels you towards a &lt;strong&gt;limitless future&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Source&lt;/strong&gt;: &lt;a href=&#34;https://youtu.be/fesslaSxdqs?si=40VEBURtZr6X9yJf&#34;&gt;https://youtu.be/fesslaSxdqs?si=40VEBURtZr6X9yJf&lt;/a&gt;&lt;/p&gt;
- https://bookofdaniel.in/posts/the-unstoppable-framework/ - 2024</description>
        </item>
    
    
  </channel>
</rss> 